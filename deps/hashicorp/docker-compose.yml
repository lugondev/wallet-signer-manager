version: '3.7'

x-container-common: &container-common
  image: consensys/quorum-hashicorp-vault-plugin:v1.1.4
  restart: ${CONTAINER_RESTART-on-failure}
  networks:
    - hashicorp
      
x-default-variables: &default-variables
  ROOT_TOKEN_PATH: /vault/token/.root
  PLUGIN_MOUNT_PATH: quorum
  KVV2_MOUNT_PATH: secret
  VAULT_IS_READY: /vault/token/.ready
  
x-tls-variables: &tls-variables
  VAULT_CACERT: ${VAULT_CACERT-/vault/tls/ca.crt}
  VAULT_CLIENT_CERT: ${VAULT_CLIENT_CERT-/vault/tls/client.crt}
  VAULT_CLIENT_KEY: ${VAULT_CLIENT_KEY-/vault/tls/client.key}
  VAULT_SERVER_CERT: ${VAULT_SERVER_CERT-/vault/tls/tls.crt}
  VAULT_SERVER_KEY: ${VAULT_SERVER_KEY-/vault/tls/tls.key}
  
x-agent-variables: &agent-variables
  SECRET_FILE_PATH: /vault/token/secret
  ROLE_FILE_PATH: /vault/token/role
  CAPABILITIES: '[\"create\", \"read\", \"update\", \"delete\", \"list\"]'
  APP_ROLE_ID: key-manager
  APP_ROLE_POLICIES: '["allow_keys", "allow_secrets"]'
  POLICY_ID: allow_keys
  KVV2_POLICY_ID: allow_secrets
 
services:
  hashicorp:
    <<: *container-common
    tty: true
    cap_add:
      - IPC_LOCK
    volumes:
      - hashicorp-token:/vault/token
      - ./config/config.hcl:/vault/config.hcl:ro
    ports:
      - 8200:8200
    environment:
      <<: *default-variables
      VAULT_ADDR: http://hashicorp:8200
    entrypoint:
      - sh
      - -c
      - |
        ( sleep 2; vault-init.sh && cat > $${VAULT_IS_READY}) &
        vault server -config=/vault/config.hcl
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8200/v1/sys/health?standbyok=true" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  hashicorp-agent:
    <<: *container-common
    environment:
      <<: *default-variables
      <<: *agent-variables
      VAULT_ADDR: http://hashicorp:8200
    tty: true
    depends_on:
      - hashicorp
    cap_add:
      - IPC_LOCK
    volumes:
      - hashicorp-token:/vault/token
      - ./config/agent-config.hcl:/vault/config.hcl:ro
    entrypoint:
      - sh
      - -c
      - |

        until [ -f $${VAULT_IS_READY} ]; do
          echo "[AGENT] waiting for vault to be ready..."
          sleep 1
        done

        vault-agent-init.sh
        vault agent -config=/vault/config.hcl

  hashicorp-tls:
    <<: *container-common
    container_name: hashicorp
    tty: true
    cap_add:
      - IPC_LOCK
    volumes:
      - hashicorp-token:/vault/token
      - ./config/config-tls.hcl:/vault/config.hcl:ro
      - ./tls:/vault/tls:ro
    ports:
      - 8200:8200
    environment:
      <<: *default-variables
      <<: *tls-variables
      VAULT_ADDR: https://hashicorp:8200
    entrypoint:
      - sh
      - -c
      - |
        ( sleep 2; vault-init.sh && cat > $${VAULT_IS_READY}) &
        vault server -config=/vault/config.hcl
    healthcheck:
      test: [ "CMD", "wget", "--spider", "--proxy", "off", "https://localhost:8200/v1/sys/health?standbyok=true" ]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s

  hashicorp-agent-tls:
    <<: *container-common
    container_name: hashicorp-agent
    environment:
      <<: *default-variables
      <<: *agent-variables
      <<: *tls-variables
      VAULT_ADDR: https://hashicorp:8200
    tty: true
    depends_on:
      - hashicorp-tls
    cap_add:
      - IPC_LOCK
    volumes:
      - hashicorp-token:/vault/token
      - ./config/agent-config-tls.hcl:/vault/config.hcl:ro
      - ./tls:/vault/tls:ro
    entrypoint:
      - sh
      - -c
      - |

        until [ -f $${VAULT_IS_READY} ]; do
          echo "[AGENT] waiting for vault to be ready..."
          sleep 1
        done

        vault-agent-init.sh
        vault agent -config=/vault/config.hcl

volumes:
  hashicorp-token:
    driver: local
    name: hashicorp-token

networks:
  hashicorp:
    external:
      name: hashicorp
